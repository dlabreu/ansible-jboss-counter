---
- name: Check JBoss/WildFly installation and version
  hosts: all
  gather_facts: true
  serial: 10
  vars:
        excel_loc : "REPORT PATH HERE eap.csv"
        fuse_running: "false"


  tasks:
# JBoss
    - name: Check for running JBoss
      shell: "ps aux | grep -o -m1 'jboss\\.home\\.dir=[^[:space:]]*' | cut -d= -f2"
      register: jboss_home_dir

    - name: Read file contents
      slurp:
        src: "{{jboss_home_dir.stdout}}/version.txt"
      register: file_contents
      when: 
        - jboss_home_dir.stdout_lines|length != 0

    - name: set contents to facts 
      set_fact: 
        Jboss_installed: "{{ file_contents.content | b64decode }}"
      when: 
        - jboss_home_dir.stdout_lines|length != 0

    - name: Find WildFly installation directory
      find:
        paths: "/"
        patterns: "wildfly"
      register: wildfly_directory

    - name: Get WildFly version from console output
      command: "{{ wildfly_directory.files[0].path }}/bin/standalone.sh --version"
      register: wildfly_version_output
      ignore_errors: true

    - name: Extract WildFly version
      set_fact:
        wildfly_version: "{{ wildfly_version_output.stdout_lines[0] | regex_replace('^.*WildFly (\\S+).*$','\\1') }}"
      when: wildfly_version_output.rc == 0

    - name: Display result
      debug:
        msg: |
          WildFly is {{
            'installed in ' ~ wildfly_directory.files[0].path
            if wildfly_directory.matched > 0
            else 'not installed'
          }}
          Version: {{ wildfly_version | default('Unknown') }}

    - name: Display result
      debug:
        msg: "WildFly is {{ 'installed in ' ~ wildfly_directory.files[0].path if wildfly_directory.matched > 0 else 'not installed' }}"
        


# Fuse/Apache Camel
    - name: Check for running Fuse/Apache Camel as an pid
      shell: ps -ef | grep -i java
      register: fuse_running

    - name: Fuse state
      set_fact: 
        fuse_installed: true
      when: 
        - fuse_running.stdout.find('fuse') != -1


# Block for Report
    - name: Generate report, collect data for reporting
      block:

        - name: Set values
          set_fact: 
            ansible_hostname: "{{ ansible_hostname }}"
            ansible_distribution: "{{ ansible_distribution }}"
            ansible_distribution_version: "{{ ansible_distribution_version }}"
            ansible_processor_vcpus_count: "{{ ansible_processor_vcpus }}"
          
        - name: Creating excel spreadsheet
          file:
            path: "{{ excel_loc }}"
            state: touch
          delegate_to: localhost
          run_once: true 

        - name: Adding initial line to spreadsheet
          lineinfile:
            path: "{{ excel_loc }}"
            line: "Hostname,OS,OS-Version,vcpu,Fuse-Installed,Jboss-Installed"
          delegate_to: localhost
          run_once: true 

        - name: Adding test values to spreadsheet
          lineinfile:
            path: "{{ excel_loc }}"
            line: "{{ ansible_hostname }},{{ ansible_distribution }},{{ ansible_distribution_version }},{{ ansible_processor_vcpus_count }},{{ fuse_installed | default('no') }},{{ Jboss_installed | default('no') }}"
          delegate_to: localhost
